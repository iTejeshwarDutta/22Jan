Q1: Read about HTTP requests and different methods.

Ans:  HTTP defines a set of request methods to indicate the desired action to be performed for a given resource. Although they can also be nouns, these request methods are sometimes referred to as HTTP verbs. Each of them implements a different semantic, but some common features are shared by a group of them: e.g. a request method can be safe, idempotent, or cacheable.

GET
This method requests a representation of the specified resource. Requests using GET should only retrieve data.

HEAD
This method asks for a response identical to a GET request, but without the response body.

POST
This method submits an entity to the specified resource, often causing a change in state or side effects on the server.

PUT
This method replaces all current representations of the target resource with the request payload.

DELETE
This method deletes the specified resource.

CONNECT
This method establishes a tunnel to the server identified by the target resource.

OPTIONS
This method describes the communication options for the target resource.

TRACE
This method performs a message loop-back test along the path to the target resource.

PATCH
This method applies partial modifications to a resource.


Q2: How you do make HTTP requests via axios?
Ans:  Axios is a very popular JavaScript library you can use to perform HTTP requests, that works in both Browser and Node.js platforms. We can make HTTP requests via AXIOS bu using Axios Get Request method. 
Axios can make a GET request to “get” data from a server API. The axios.get() method is used to make an HTTP get request.
There are two parameters that must be passed to the Axios get() method. It first requires the service endpoint's url. Second, an object containing the properties we wish to send to our server API should be supplied to it.

Axios can be installed to be used in Node.js using npm:
npm install axios
And afterwards using GET method with the following example


import axios from 'axios';
axios.get('/user_login', {
	params: {
		username: 'john1904',
	}
})
.then(function (response) {
	console.log(response);
})
